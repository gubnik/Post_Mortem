plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '0.0.1'
group = 'net.team_prometheus.post_morte'
archivesBaseName = 'post_mortem'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    runs {
        client {

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'post_mortem'

            mods {
                post_mortem {
                    source sourceSets.main
                }
            }
        }

        server {

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'post_mortem'

            mods {
                post_mortem {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'post_mortem'

            mods {
                post_mortem {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'post_mortem', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                post_mortem {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://maven.kosmx.dev/' }
    maven { url = 'https://maven.theillusivec4.top/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.8'
    // patchouli
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:[1.19.2-77]:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:[1.19.2-77]")
    // player animations
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:0.4.0-test1")
    // curios
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.4.0")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.4.0:api")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "post_mortem",
                "Specification-Vendor"    : "post_mortemsareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "post_mortemsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
